{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {Toc, Preview, TextField, PropsTable} = _components;\n  if (!Preview) _missingMdxReference(\"Preview\", true);\n  if (!PropsTable) _missingMdxReference(\"PropsTable\", true);\n  if (!TextField) _missingMdxReference(\"TextField\", true);\n  if (!Toc) _missingMdxReference(\"Toc\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Toc, {\n      selector: \"#toc\",\n      items: \"[{\\\"anchor\\\":\\\"#props\\\",\\\"title\\\":\\\"Props\\\"},{\\\"anchor\\\":\\\"#examples\\\",\\\"title\\\":\\\"Examples\\\"}]\"\n    }), _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"TextField\"\n      }), \" component allows user so enter text with a keyboard. It consists of a label, an input field and a help text. The later also includes error messages.\"]\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(TextField, {\n        label: \"Try me\",\n        description: \"You should really try this!\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { TextField } from '@marigold/components';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: _jsx(_components.a, {\n        href: \"#props\",\n        children: \"Props\"\n      })\n    }), \"\\n\", _jsx(PropsTable, {\n      props: [{\n        property: 'label',\n        type: 'ReactNode',\n        description: \"The label text. If you don't want to visually display a label, provide an `aria-label` or `aria-labelledby` attribute for accessibility.\",\n        default: 'none'\n      }, {\n        property: 'description',\n        type: 'ReactNode',\n        description: 'A helpful text.',\n        default: 'none'\n      }, {\n        property: 'errorMessage',\n        type: 'ReactNode',\n        description: 'An error message.',\n        default: 'none'\n      }, {\n        property: 'error',\n        type: 'boolean',\n        description: 'If `true`, the field is considered invalid and if set the `errorMessage` is shown instead of the `description`.',\n        default: 'false'\n      }, {\n        property: 'value',\n        type: 'string',\n        description: 'The value of the input field.',\n        default: 'none'\n      }, {\n        property: 'disabled',\n        type: 'boolean',\n        description: 'If `true`, the input is disabled.',\n        default: 'false'\n      }, {\n        property: 'required',\n        type: 'boolean',\n        description: 'If `true`, the input is required',\n        default: 'false'\n      }, {\n        property: 'readOnly',\n        type: 'boolean',\n        description: 'If `true`, the input is readOnly.',\n        default: 'false'\n      }, {\n        property: 'type',\n        type: 'string',\n        description: 'The type of the input field.',\n        default: 'text'\n      }, {\n        property: 'onChange',\n        type: 'function',\n        description: \"A callback function that is called with the input's current value when the input `value` changes.\",\n        default: 'none'\n      }, {\n        property: 'width',\n        type: 'string',\n        description: 'Control the `width` of the field.',\n        default: '100%'\n      }, {\n        property: '...',\n        type: '',\n        description: 'Yes you can use all regular attributes of `input!`',\n        default: ''\n      }]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"examples\",\n      children: _jsx(_components.a, {\n        href: \"#examples\",\n        children: \"Examples\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"simple-text-field\",\n      children: _jsx(_components.a, {\n        href: \"#simple-text-field\",\n        children: \"Simple Text Field\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<TextField label=\\\"Firstname\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"disabled-text-field\",\n      children: _jsx(_components.a, {\n        href: \"#disabled-text-field\",\n        children: \"Disabled Text Field\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<TextField label=\\\"Field disabled\\\" disabled />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"required-text-field\",\n      children: _jsx(_components.a, {\n        href: \"#required-text-field\",\n        children: \"Required Text Field\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<TextField label=\\\"Name\\\" required />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"text-field-with-an-error\",\n      children: _jsx(_components.a, {\n        href: \"#text-field-with-an-error\",\n        children: \"Text Field with an Error\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<TextField label=\\\"Name\\\" error errorMessage=\\\"Something went wrong!\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"not-every-number-is-a-number\",\n      children: _jsxs(_components.a, {\n        href: \"#not-every-number-is-a-number\",\n        children: [\"Not every number is a \", _jsx(_components.code, {\n          children: \"number\"\n        }), \"!\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsxs(_components.a, {\n        href: \"https://www.coywolf.news/webmaster/accessible-number-input/\",\n        children: [\"Just because the input contains numbers, it is not necessarily correctly to use \", _jsx(_components.code, {\n          children: \"input[type=number]\"\n        }), \"!\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"const FieldTextErrorNumberImput = () => {\\n  const [value, setValue] = React.useState('');\\n  const error = value.length > 0 && !/^\\\\d+$/.test(value);\\n\\n  return (\\n    <TextField\\n      label=\\\"Promo Code\\\"\\n      description=\\\"You'll find your promo code on the back of your ticket.\\\"\\n      errorMessage=\\\"Your promo code is not valid! Please review your input.\\\"\\n      value={value}\\n      onChange={setValue}\\n      error={error}\\n      inputmode=\\\"numeric\\\"\\n      pattern=\\\"[0-9]*\\\"\\n    />\\n  );\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"use-different-input-methods\",\n      children: _jsxs(_components.a, {\n        href: \"#use-different-input-methods\",\n        children: [\"Use different \", _jsx(_components.code, {\n          children: \"input\"\n        }), \" methods\"]\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(TextField, {\n        label: \"EMail\",\n        type: \"email\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<TextField label=\\\"EMail\\\" type=\\\"email\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<TextField label=\\\"Date\\\" type=\\\"date\\\" />\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<TextField label=\\\"Phone Number\\\" type=\\\"tel\\\" />\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"TextField","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=340%3A0","group":"Forms","switch":true},"scope":{}},"navigation":[{"title":"Code Hightlight Test","slug":"highlight"},{"title":"Marigold","slug":"index"},{"name":"introduction","items":[{"title":"Getting Started","caption":"This page describes how to get started building an application with Marigold.","order":1,"slug":"introduction/getting-started"},{"title":"About","caption":"Learn about the goals of Marigold and how it aims to help building user interfaces.","order":2,"slug":"introduction/about"},{"title":"Concepts","caption":"This page discusses the concepts and ideas that Marigold is build upon.","order":3,"slug":"introduction/concepts"},{"title":"Theming","caption":"This page explains how themes workd and how to use them.","order":4,"slug":"introduction/theming"},{"title":"FAQ","caption":"This pages aims to help with the most common questions and inquiries.","order":0,"slug":"introduction/faq"}],"groups":[]},{"name":"foundation","items":[{"title":"Box Primitive","slug":"foundation/box-primitive"},{"title":"CSS-in-JS","slug":"foundation/css-in-js"},{"title":"Icons","slug":"foundation/icons"},{"title":"Theme & Variants","slug":"foundation/themes-variants"}],"groups":[]},{"name":"components","items":[],"groups":[{"name":"Layout","items":[{"title":"Aside","group":"Layout","slug":"components/aside"},{"title":"Aspect","group":"Layout","slug":"components/aspect"},{"title":"Box","group":"Layout","slug":"components/box"},{"title":"Breakout","group":"Layout","slug":"components/breakout"},{"title":"Center","group":"Layout","slug":"components/center"},{"title":"Columns","group":"Layout","slug":"components/columns"},{"title":"Container","group":"Layout","slug":"components/container"},{"title":"Content","caption":"<short purpose of component> (optional)","group":"Layout","slug":"components/content"},{"title":"Divider","group":"Layout","slug":"components/divider"},{"title":"Inline","group":"Layout","slug":"components/inline"},{"title":"Split","group":"Layout","slug":"components/split"},{"title":"Stack","group":"Layout","slug":"components/stack"},{"title":"Tiles","group":"Layout","slug":"components/tiles"}]},{"name":"Forms","items":[{"title":"Button","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=11%3A269","switch":true,"slug":"components/button"},{"title":"Checkbox","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=467%3A159","group":"Forms","switch":true,"slug":"components/checkbox"},{"title":"Input","group":"Forms","switch":true,"slug":"components/input"},{"title":"Label","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=92%3A0","switch":true,"slug":"components/label"},{"title":"NumberField","group":"Forms","switch":true,"slug":"components/number-field"},{"title":"Radio","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=467%3A332","switch":true,"slug":"components/radio"},{"title":"Select","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2596%3A2348","switch":true,"slug":"components/select"},{"title":"Slider","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=845%3A1254","switch":true,"slug":"components/slider"},{"title":"Switch","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2458%3A2254","slug":"components/switch"},{"title":"TextArea","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=454%3A1","group":"Forms","switch":true,"slug":"components/text-area"},{"title":"TextField","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=340%3A0","group":"Forms","switch":true,"slug":"components/text-field"}]},{"name":"Collections","items":[{"title":"Table","group":"Collections","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2387%3A1928","switch":true,"slug":"components/table"}]},{"name":"Overlay","items":[{"title":"Dialog","group":"Overlay","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=845%3A1095","switch":true,"slug":"components/dialog"},{"title":"Menu","group":"Overlay","slug":"components/menu"},{"title":"Tooltip","group":"Overlay","slug":"components/tooltip"}]},{"name":"Content","items":[{"title":"Badge","group":"Content","switch":true,"slug":"components/badge"},{"title":"Card","group":"Content","switch":true,"slug":"components/card"},{"title":"Footer","group":"Content","slug":"components/footer"},{"title":"Header","group":"Content","slug":"components/header"},{"title":"Headline","caption":"<short purpose of component> (optional)","group":"Content","switch":true,"slug":"components/headline"},{"title":"Icon","group":"Content","slug":"components/icon"},{"title":"Image","group":"Content","slug":"components/image"},{"title":"Link","group":"Content","switch":true,"slug":"components/link"},{"title":"List","group":"Content","switch":true,"slug":"components/list"},{"title":"Message","group":"Content","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=582%3A119","switch":true,"slug":"components/message"},{"title":"Text","group":"Content","switch":true,"slug":"components/text"},{"title":"VisuallyHidden","group":"Content","slug":"components/visually-hidden"}]},{"name":"Application","items":[{"title":"Provider","group":"Application","slug":"components/provider"}]}]},{"name":"develop","items":[{"title":"Release","slug":"develop/release"},{"title":"Scripts","slug":"develop/scripts"}],"groups":[]}]},"__N_SSG":true}