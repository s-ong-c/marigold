{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    h2: \"h2\",\n    a: \"a\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    h3: \"h3\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components), {Toc, MarigoldTheme, Inline, Button, Preview} = _components;\n  if (!Button) _missingMdxReference(\"Button\", true);\n  if (!Inline) _missingMdxReference(\"Inline\", true);\n  if (!MarigoldTheme) _missingMdxReference(\"MarigoldTheme\", true);\n  if (!Preview) _missingMdxReference(\"Preview\", true);\n  if (!Toc) _missingMdxReference(\"Toc\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Toc, {\n      selector: \"#toc\",\n      items: \"[{\\\"anchor\\\":\\\"#props\\\",\\\"title\\\":\\\"Props\\\"},{\\\"anchor\\\":\\\"#types\\\",\\\"title\\\":\\\"Types\\\"}]\"\n    }), _jsxs(_components.p, {\n      children: [\"The Button component renders a \", _jsx(_components.code, {\n        children: \"<button>\"\n      }), \" element.\\nButtons allow users to perform an action.\\nThey have multiple styles for various needs, and are ideal for calling attention to where a user needs to do something in order to move forward in a flow.\\nThe style variant and size of the button can be added with the variant prop and is composed like \", _jsx(_components.code, {\n        children: \"variant.size\"\n      }), \".\"]\n    }), \"\\n\", _jsx(MarigoldTheme, {\n      children: _jsxs(Inline, {\n        space: \"small\",\n        children: [_jsx(Button, {\n          variant: \"primary\",\n          children: \"Primary\"\n        }), \"\\n\", _jsx(Button, {\n          variant: \"secondary\",\n          children: \"Secondary\"\n        }), \"\\n\", _jsx(Button, {\n          variant: \"ghost\",\n          children: \"Ghost\"\n        }), \"\\n\", _jsx(Button, {\n          variant: \"text\",\n          children: \"Text Only\"\n        })]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Button } from '@marigold/components';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: _jsx(_components.a, {\n        href: \"#props\",\n        children: \"Props\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            align: \"left\",\n            children: \"Property\"\n          }), _jsx(_components.th, {\n            align: \"left\",\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            align: \"left\",\n            children: \"Default\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"variant\"\n            }), \" (optional)\"]\n          }), _jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"primary\"\n            }), \", \", _jsx(_components.code, {\n              children: \"secondary\"\n            }), \", \", _jsx(_components.code, {\n              children: \"ghost\"\n            }), \", \", _jsx(_components.code, {\n              children: \"text\"\n            })]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"none\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"size\"\n            }), \" (optional)\"]\n          }), _jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"small\"\n            }), \", \", _jsx(_components.code, {\n              children: \"large\"\n            })]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"large\"\n            })\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"disabled\"\n            }), \" (optional)\"]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            align: \"left\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"space\"\n            }), \" (optional)\"]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"ResponsiveStyleValue<string>\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"none\"\n            })\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"types\",\n      children: _jsx(_components.a, {\n        href: \"#types\",\n        children: \"Types\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"primary-button\",\n      children: _jsx(_components.a, {\n        href: \"#primary-button\",\n        children: \"Primary Button\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The primary button function is to achieve the most common or most important goal of the user, it has more visual weight than the secondary options. There should not be more than one primary button in a screen at the time.\"\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.h4, {\n      id: \"default\",\n      children: _jsx(_components.a, {\n        href: \"#default\",\n        children: \"Default\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(_components.p, {\n        children: _jsx(Button, {\n          variant: \"primary\",\n          children: \"Primary\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"primary\\\">Primary</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"disabled\",\n      children: _jsx(_components.a, {\n        href: \"#disabled\",\n        children: \"Disabled\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(Button, {\n        variant: \"primary\",\n        disabled: true,\n        children: _jsx(_components.p, {\n          children: \"Primary\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"primary\\\" disabled>\\n  Primary\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"secondary-button\",\n      children: _jsx(_components.a, {\n        href: \"#secondary-button\",\n        children: \"Secondary Button\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Secondary buttons are an alternative to the user to the Primary option. They are used for actions like canceling, skipping, resetting, declining an offer etc.\"\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.h4, {\n      id: \"default-1\",\n      children: _jsx(_components.a, {\n        href: \"#default-1\",\n        children: \"Default\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(_components.p, {\n        children: _jsx(Button, {\n          variant: \"secondary\",\n          children: \"Secondary\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"secondary\\\">Secondary</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"disabled-1\",\n      children: _jsx(_components.a, {\n        href: \"#disabled-1\",\n        children: \"Disabled\"\n      })\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(Button, {\n        variant: \"secondary\",\n        disabled: true,\n        children: _jsx(_components.p, {\n          children: \"Secondary\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"secondary\\\" disabled>\\n  Secondary\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"ghost-button\",\n      children: _jsx(_components.a, {\n        href: \"#ghost-button\",\n        children: \"Ghost Button\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"They are used for miscellaneous actions, they are important but is not the ones where it is desired that the user focus at the moment.\"\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.h4, {\n      id: \"default-2\",\n      children: _jsx(_components.a, {\n        href: \"#default-2\",\n        children: \"Default\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"ghost\\\">Ghost</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"disabled-2\",\n      children: _jsx(_components.a, {\n        href: \"#disabled-2\",\n        children: \"Disabled\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"ghost\\\" disabled>\\n  Ghost\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"suplementary-text-button\",\n      children: _jsx(_components.a, {\n        href: \"#suplementary-text-button\",\n        children: \"Suplementary Text Button\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"They can be used in a similar way of a secondary button, but they are meant to be less relevant to the user.\"\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.h4, {\n      id: \"default-3\",\n      children: _jsx(_components.a, {\n        href: \"#default-3\",\n        children: \"Default\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"text\\\">Text Only</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"disabled-3\",\n      children: _jsx(_components.a, {\n        href: \"#disabled-3\",\n        children: \"Disabled\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"text\\\" disabled>\\n  Text Only\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"button-with-icon\",\n      children: _jsx(_components.a, {\n        href: \"#button-with-icon\",\n        children: \"Button with icon\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Icons can be added in Order to make clearer what a button does. Buttons should not be made only with icons, because every user may understand them on a different way.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"primary\\\" space=\\\"xxsmall\\\">\\n  <Ticket /> Icon Primary\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"primary\\\" space=\\\"xxsmall\\\" disabled>\\n  <Ticket /> Icon Primary\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"small-buttons\",\n      children: _jsx(_components.a, {\n        href: \"#small-buttons\",\n        children: \"Small Buttons\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If there are many actions in one page, is it possible to use small buttons instead of big ones. As well if the page is required to be open on mobile devices.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"primary\\\" size=\\\"small\\\">\\n  Primary\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"primary\\\" size=\\\"small\\\" disabled>\\n  Primary\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"secondary\\\" size=\\\"small\\\">\\n  Secondary\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"secondary\\\" size=\\\"small\\\" disabled>\\n  Secondary\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"ghost\\\" size=\\\"small\\\">\\n  Ghost\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"ghost\\\" size=\\\"small\\\" disabled>\\n  Ghost\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"text\\\" size=\\\"small\\\">\\n  Text Only\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"text\\\" size=\\\"small\\\" disabled>\\n  Text Only\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"small-buttons-with-icon\",\n      children: _jsx(_components.a, {\n        href: \"#small-buttons-with-icon\",\n        children: \"Small Buttons with icon\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Icons can be added in Order to make clearer what a button does. Buttons should not be made only with icons, because every user may understand them on a different way.Icons can be added in Order to make clearer what a button does. Buttons should not be made only with icons, because every user may understand them on a different way.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"primary\\\" size=\\\"small\\\" space=\\\"xxsmall\\\">\\n  <Ticket /> Primary\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"secondary\\\" size=\\\"small\\\" space=\\\"xxsmall\\\">\\n  <Direction /> Secondary\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"ghost\\\" size=\\\"small\\\" space=\\\"xxsmall\\\">\\n  <CircleUnchecked /> Ghost\\n</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Button variant=\\\"text\\\" size=\\\"small\\\" space=\\\"xxsmall\\\">\\n  <FormatSize /> Text Only\\n</Button>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Button","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=11%3A269","switch":true},"scope":{}},"navigation":[{"title":"Code Hightlight Test","slug":"highlight"},{"title":"Marigold","slug":"index"},{"name":"introduction","items":[{"title":"Getting Started","caption":"This page describes how to get started building an application with Marigold.","order":1,"slug":"introduction/getting-started"},{"title":"About","caption":"Learn about the goals of Marigold and how it aims to help building user interfaces.","order":2,"slug":"introduction/about"},{"title":"Concepts","caption":"This page discusses the concepts and ideas that Marigold is build upon.","order":3,"slug":"introduction/concepts"},{"title":"Theming","caption":"This page explains how themes workd and how to use them.","order":4,"slug":"introduction/theming"},{"title":"FAQ","caption":"This pages aims to help with the most common questions and inquiries.","order":0,"slug":"introduction/faq"}],"groups":[]},{"name":"foundation","items":[{"title":"Box Primitive","slug":"foundation/box-primitive"},{"title":"CSS-in-JS","slug":"foundation/css-in-js"},{"title":"Icons","slug":"foundation/icons"},{"title":"Theme & Variants","slug":"foundation/themes-variants"}],"groups":[]},{"name":"components","items":[],"groups":[{"name":"Layout","items":[{"title":"Aside","group":"Layout","slug":"components/aside"},{"title":"Aspect","group":"Layout","slug":"components/aspect"},{"title":"Box","group":"Layout","slug":"components/box"},{"title":"Breakout","group":"Layout","slug":"components/breakout"},{"title":"Center","group":"Layout","slug":"components/center"},{"title":"Columns","group":"Layout","slug":"components/columns"},{"title":"Container","group":"Layout","slug":"components/container"},{"title":"Content","caption":"<short purpose of component> (optional)","group":"Layout","slug":"components/content"},{"title":"Divider","group":"Layout","slug":"components/divider"},{"title":"Inline","group":"Layout","slug":"components/inline"},{"title":"Split","group":"Layout","slug":"components/split"},{"title":"Stack","group":"Layout","slug":"components/stack"},{"title":"Tiles","group":"Layout","slug":"components/tiles"}]},{"name":"Forms","items":[{"title":"Button","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=11%3A269","switch":true,"slug":"components/button"},{"title":"Checkbox","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=467%3A159","group":"Forms","switch":true,"slug":"components/checkbox"},{"title":"Input","group":"Forms","switch":true,"slug":"components/input"},{"title":"Label","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=92%3A0","switch":true,"slug":"components/label"},{"title":"NumberField","group":"Forms","switch":true,"slug":"components/number-field"},{"title":"Radio","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=467%3A332","switch":true,"slug":"components/radio"},{"title":"Select","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2596%3A2348","switch":true,"slug":"components/select"},{"title":"Slider","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=845%3A1254","switch":true,"slug":"components/slider"},{"title":"Switch","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2458%3A2254","slug":"components/switch"},{"title":"TextArea","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=454%3A1","group":"Forms","switch":true,"slug":"components/text-area"},{"title":"TextField","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=340%3A0","group":"Forms","switch":true,"slug":"components/text-field"}]},{"name":"Collections","items":[{"title":"Table","group":"Collections","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2387%3A1928","switch":true,"slug":"components/table"}]},{"name":"Overlay","items":[{"title":"Dialog","group":"Overlay","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=845%3A1095","switch":true,"slug":"components/dialog"},{"title":"Menu","group":"Overlay","slug":"components/menu"},{"title":"Tooltip","group":"Overlay","slug":"components/tooltip"}]},{"name":"Content","items":[{"title":"Badge","group":"Content","switch":true,"slug":"components/badge"},{"title":"Card","group":"Content","switch":true,"slug":"components/card"},{"title":"Footer","group":"Content","slug":"components/footer"},{"title":"Header","group":"Content","slug":"components/header"},{"title":"Headline","caption":"<short purpose of component> (optional)","group":"Content","switch":true,"slug":"components/headline"},{"title":"Icon","group":"Content","slug":"components/icon"},{"title":"Image","group":"Content","slug":"components/image"},{"title":"Link","group":"Content","switch":true,"slug":"components/link"},{"title":"List","group":"Content","switch":true,"slug":"components/list"},{"title":"Message","group":"Content","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=582%3A119","switch":true,"slug":"components/message"},{"title":"Text","group":"Content","switch":true,"slug":"components/text"},{"title":"VisuallyHidden","group":"Content","slug":"components/visually-hidden"}]},{"name":"Application","items":[{"title":"Provider","group":"Application","slug":"components/provider"}]}]},{"name":"develop","items":[{"title":"Release","slug":"develop/release"},{"title":"Scripts","slug":"develop/scripts"}],"groups":[]}]},"__N_SSG":true}