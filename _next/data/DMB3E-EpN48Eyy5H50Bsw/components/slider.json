{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\",\n    a: \"a\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components), {Toc, Preview, Slider} = _components;\n  if (!Preview) _missingMdxReference(\"Preview\", true);\n  if (!Slider) _missingMdxReference(\"Slider\", true);\n  if (!Toc) _missingMdxReference(\"Toc\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Toc, {\n      selector: \"#toc\",\n      items: \"[{\\\"anchor\\\":\\\"#props\\\",\\\"title\\\":\\\"Props\\\"},{\\\"anchor\\\":\\\"#examples\\\",\\\"title\\\":\\\"Examples\\\"},{\\\"anchor\\\":\\\"#width\\\",\\\"title\\\":\\\"Width\\\"},{\\\"anchor\\\":\\\"#disabled\\\",\\\"title\\\":\\\"Disabled\\\"},{\\\"anchor\\\":\\\"#step\\\",\\\"title\\\":\\\"Step\\\"},{\\\"anchor\\\":\\\"#max-value\\\",\\\"title\\\":\\\"Max value\\\"},{\\\"anchor\\\":\\\"#value-controlled\\\",\\\"title\\\":\\\"Value (controlled)\\\"},{\\\"anchor\\\":\\\"#default-value-uncontrolled\\\",\\\"title\\\":\\\"Default Value (uncontrolled)\\\"},{\\\"anchor\\\":\\\"#currency\\\",\\\"title\\\":\\\"Currency\\\"},{\\\"anchor\\\":\\\"#percent\\\",\\\"title\\\":\\\"Percent\\\"}]\"\n    }), _jsx(_components.p, {\n      children: \"The Slider component allows users to quickly select a value within a range. They should be used when the upper and lower bounds to the range are invariable.\"\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsx(Slider, {\n        formatOptions: {\n          style: 'percent'\n        },\n        step: 0.01,\n        maxValue: 1,\n        defaultValue: [0.5],\n        width: 300,\n        children: _jsx(_components.p, {\n          children: \"Marigold Completition\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Slider } from '@marigold/components';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: _jsx(_components.a, {\n        href: \"#props\",\n        children: \"Props\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            align: \"left\",\n            children: \"Property\"\n          }), _jsx(_components.th, {\n            align: \"left\",\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            align: \"left\",\n            children: \"Default\"\n          }), _jsx(_components.th, {\n            align: \"left\",\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"disabled\"\n            }), \" (optional)\"]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"boolean\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"false\"\n            })\n          }), _jsxs(_components.td, {\n            align: \"left\",\n            children: [\"If \", _jsx(_components.code, {\n              children: \"true\"\n            }), \", the slider is disabled.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"value\"\n            }), \" (optional)\"]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"number[]\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\"\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: \"The slider's value (controlled).\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"defaultValue\"\n            }), \" (optional)\"]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"number[]\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\"\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: \"The slider's default value (uncontrolled).\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"maxValue\"\n            }), \" (optional)\"]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"number\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"100\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: \"The slider's maximum value.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"step\"\n            }), \" (optional)\"]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"number\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\"\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: \"The slider's step value.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"formatOptions\"\n            }), \" (optional)\"]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.a, {\n              href: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat\",\n              children: _jsx(_components.code, {\n                children: \"Intl.NumberFormatOptions\"\n              })\n            })\n          }), _jsx(_components.td, {\n            align: \"left\"\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: \"The slider's step value.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"width\"\n            }), \" (optional)\"]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"string\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"100%\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: \"Control the width of the field.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            align: \"left\",\n            children: \"...\"\n          }), _jsx(_components.td, {\n            align: \"left\"\n          }), _jsx(_components.td, {\n            align: \"left\"\n          }), _jsxs(_components.td, {\n            align: \"left\",\n            children: [\"Yes you can use all regular attributes of \", _jsx(_components.code, {\n              children: \"input type = range\"\n            }), \"!\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"examples\",\n      children: _jsx(_components.a, {\n        href: \"#examples\",\n        children: \"Examples\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"width\",\n      children: _jsx(_components.a, {\n        href: \"#width\",\n        children: \"Width\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Slider width={180} aria-label=\\\"width\\\">\\n  Example\\n</Slider>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"disabled\",\n      children: _jsx(_components.a, {\n        href: \"#disabled\",\n        children: \"Disabled\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Slider disabled>Example</Slider>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"step\",\n      children: _jsx(_components.a, {\n        href: \"#step\",\n        children: \"Step\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Slider step={10}>Example</Slider>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"max-value\",\n      children: _jsx(_components.a, {\n        href: \"#max-value\",\n        children: \"Max value\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Slider aria-label=\\\"maxValue\\\" maxValue={50}>\\n  Example\\n</Slider>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"value-controlled\",\n      children: _jsx(_components.a, {\n        href: \"#value-controlled\",\n        children: \"Value (controlled)\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"() => {\\n  const [value, setValue] = React.useState([75]);\\n  return (\\n    <Slider value={value} onChange={setValue}>\\n      Example\\n    </Slider>\\n  );\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"default-value-uncontrolled\",\n      children: _jsx(_components.a, {\n        href: \"#default-value-uncontrolled\",\n        children: \"Default Value (uncontrolled)\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Slider defaultValue={[25]}>Example</Slider>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"currency\",\n      children: _jsx(_components.a, {\n        href: \"#currency\",\n        children: \"Currency\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Slider formatOptions={{ style: 'currency', currency: 'EUR' }}>Price</Slider>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"percent\",\n      children: _jsx(_components.a, {\n        href: \"#percent\",\n        children: \"Percent\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Slider formatOptions={{ style: 'percent' }} step={0.01} maxValue={1}>\\n  Percent\\n</Slider>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Slider","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=845%3A1254","switch":true},"scope":{}},"navigation":[{"title":"Code Hightlight Test","slug":"highlight"},{"title":"Marigold","slug":"index"},{"name":"introduction","items":[{"title":"Getting Started","caption":"This page describes how to get started building an application with Marigold.","order":1,"slug":"introduction/getting-started"},{"title":"About","caption":"Learn about the goals of Marigold and how it aims to help building user interfaces.","order":2,"slug":"introduction/about"},{"title":"Concepts","caption":"This page discusses the concepts and ideas that Marigold is build upon.","order":3,"slug":"introduction/concepts"},{"title":"Theming","caption":"This page explains how themes workd and how to use them.","order":4,"slug":"introduction/theming"},{"title":"FAQ","caption":"This pages aims to help with the most common questions and inquiries.","order":0,"slug":"introduction/faq"}],"groups":[]},{"name":"foundation","items":[{"title":"Box Primitive","slug":"foundation/box-primitive"},{"title":"CSS-in-JS","slug":"foundation/css-in-js"},{"title":"Icons","slug":"foundation/icons"},{"title":"Theme & Variants","slug":"foundation/themes-variants"}],"groups":[]},{"name":"components","items":[],"groups":[{"name":"Layout","items":[{"title":"Aside","group":"Layout","slug":"components/aside"},{"title":"Aspect","group":"Layout","slug":"components/aspect"},{"title":"Box","group":"Layout","slug":"components/box"},{"title":"Breakout","group":"Layout","slug":"components/breakout"},{"title":"Center","group":"Layout","slug":"components/center"},{"title":"Columns","group":"Layout","slug":"components/columns"},{"title":"Container","group":"Layout","slug":"components/container"},{"title":"Content","caption":"<short purpose of component> (optional)","group":"Layout","slug":"components/content"},{"title":"Divider","group":"Layout","slug":"components/divider"},{"title":"Inline","group":"Layout","slug":"components/inline"},{"title":"Split","group":"Layout","slug":"components/split"},{"title":"Stack","group":"Layout","slug":"components/stack"},{"title":"Tiles","group":"Layout","slug":"components/tiles"}]},{"name":"Forms","items":[{"title":"Button","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=11%3A269","switch":true,"slug":"components/button"},{"title":"Checkbox","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=467%3A159","group":"Forms","switch":true,"slug":"components/checkbox"},{"title":"Input","group":"Forms","switch":true,"slug":"components/input"},{"title":"Label","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=92%3A0","switch":true,"slug":"components/label"},{"title":"NumberField","group":"Forms","switch":true,"slug":"components/number-field"},{"title":"Radio","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=467%3A332","switch":true,"slug":"components/radio"},{"title":"Select","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2596%3A2348","switch":true,"slug":"components/select"},{"title":"Slider","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=845%3A1254","switch":true,"slug":"components/slider"},{"title":"Switch","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2458%3A2254","slug":"components/switch"},{"title":"TextArea","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=454%3A1","group":"Forms","switch":true,"slug":"components/text-area"},{"title":"TextField","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=340%3A0","group":"Forms","switch":true,"slug":"components/text-field"}]},{"name":"Collections","items":[{"title":"Table","group":"Collections","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2387%3A1928","switch":true,"slug":"components/table"}]},{"name":"Overlay","items":[{"title":"Dialog","group":"Overlay","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=845%3A1095","switch":true,"slug":"components/dialog"},{"title":"Menu","group":"Overlay","slug":"components/menu"},{"title":"Tooltip","group":"Overlay","slug":"components/tooltip"}]},{"name":"Content","items":[{"title":"Badge","group":"Content","switch":true,"slug":"components/badge"},{"title":"Card","group":"Content","switch":true,"slug":"components/card"},{"title":"Footer","group":"Content","slug":"components/footer"},{"title":"Header","group":"Content","slug":"components/header"},{"title":"Headline","caption":"<short purpose of component> (optional)","group":"Content","switch":true,"slug":"components/headline"},{"title":"Icon","group":"Content","slug":"components/icon"},{"title":"Image","group":"Content","slug":"components/image"},{"title":"Link","group":"Content","switch":true,"slug":"components/link"},{"title":"List","group":"Content","switch":true,"slug":"components/list"},{"title":"Message","group":"Content","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=582%3A119","switch":true,"slug":"components/message"},{"title":"Text","group":"Content","switch":true,"slug":"components/text"},{"title":"VisuallyHidden","group":"Content","slug":"components/visually-hidden"}]},{"name":"Application","items":[{"title":"Provider","group":"Application","slug":"components/provider"}]}]},{"name":"develop","items":[{"title":"Release","slug":"develop/release"},{"title":"Scripts","slug":"develop/scripts"}],"groups":[]}]},"__N_SSG":true}