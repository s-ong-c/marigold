{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {Toc, Preview, Tiles, Box} = _components;\n  if (!Box) _missingMdxReference(\"Box\", true);\n  if (!Preview) _missingMdxReference(\"Preview\", true);\n  if (!Tiles) _missingMdxReference(\"Tiles\", true);\n  if (!Toc) _missingMdxReference(\"Toc\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Toc, {\n      selector: \"#toc\",\n      items: \"[{\\\"anchor\\\":\\\"#props\\\",\\\"title\\\":\\\"Props\\\"},{\\\"anchor\\\":\\\"#examples\\\",\\\"title\\\":\\\"Examples\\\"}]\"\n    }), _jsxs(_components.p, {\n      children: [\"Use the Tiles component if you want to layout some items in a responsive way. Tiles is for items with the same width. If you want to set different width for the items use \", _jsx(_components.a, {\n        href: \"../columns\",\n        children: \"Columns Component\"\n      }), \".\\nIt's possible to display the items with space or set a minimum width for all items inside Tiles.\"]\n    }), \"\\n\", _jsx(Preview, {\n      children: _jsxs(Tiles, {\n        space: \"small\",\n        itemMinWidth: \"200px\",\n        children: [_jsx(Box, {\n          border: \"1px solid #ced4da\",\n          bg: \"#e9ecef\",\n          height: \"100px\"\n        }), _jsx(Box, {\n          border: \"1px solid #ced4da\",\n          bg: \"#e9ecef\",\n          height: \"100px\"\n        }), _jsx(Box, {\n          border: \"1px solid #ced4da\",\n          bg: \"#e9ecef\",\n          height: \"100px\"\n        }), _jsx(Box, {\n          border: \"1px solid #ced4da\",\n          bg: \"#e9ecef\",\n          height: \"100px\"\n        }), _jsx(Box, {\n          border: \"1px solid #ced4da\",\n          bg: \"#e9ecef\",\n          height: \"100px\"\n        }), _jsx(Box, {\n          border: \"1px solid #ced4da\",\n          bg: \"#e9ecef\",\n          height: \"100px\"\n        })]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"import { Tiles } from '@marigold/components';\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"props\",\n      children: _jsx(_components.a, {\n        href: \"#props\",\n        children: \"Props\"\n      })\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            align: \"left\",\n            children: \"Property\"\n          }), _jsx(_components.th, {\n            align: \"left\",\n            children: \"Type\"\n          }), _jsx(_components.th, {\n            align: \"left\",\n            children: \"Default\"\n          }), _jsx(_components.th, {\n            align: \"left\",\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"space\"\n            }), \" (optional)\"]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"ResponsiveStyleValue<string>\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"none\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: \"Set space between items\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsxs(_components.td, {\n            align: \"left\",\n            children: [_jsx(_components.code, {\n              children: \"itemMinWidth\"\n            }), \" (optional)\"]\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"ResponsiveStyleValue<string>\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: _jsx(_components.code, {\n              children: \"250px\"\n            })\n          }), _jsx(_components.td, {\n            align: \"left\",\n            children: \"Set minimum width for all items inside\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"examples\",\n      children: _jsx(_components.a, {\n        href: \"#examples\",\n        children: \"Examples\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"spacing-tiles\",\n      children: _jsx(_components.a, {\n        href: \"#spacing-tiles\",\n        children: \"Spacing Tiles\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Tiles space=\\\"large\\\">\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n</Tiles>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"tiles-with-min-item-width\",\n      children: _jsx(_components.a, {\n        href: \"#tiles-with-min-item-width\",\n        children: \"Tiles with min Item width\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Tiles space=\\\"xsmall\\\" itemMinWidth=\\\"100px\\\">\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n  <Box border=\\\"1px solid #ced4da\\\" bg=\\\"#e9ecef\\\" height=\\\"100px\\\" />\\n</Tiles>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"complexe-tiles-with-boxes-and-stacks\",\n      children: _jsx(_components.a, {\n        href: \"#complexe-tiles-with-boxes-and-stacks\",\n        children: \"Complexe Tiles with Boxes and Stacks\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"<Tiles itemMinWidth=\\\"400px\\\" space=\\\"small\\\">\\n  <Box border=\\\"1px solid #fa8005\\\" bg=\\\"orange10\\\" p=\\\"small\\\">\\n    <Stack space=\\\"medium\\\" align=\\\"center\\\">\\n      <Image\\n        src=\\\"https://www.pokewiki.de/images/6/63/Sugimori_004.png\\\"\\n        alt=\\\"glumanda\\\"\\n        width={200}\\n        height={200}\\n      />\\n      <Headline level=\\\"4\\\">Glumanda</Headline>\\n      <Text>\\n        Glumanda ist ein Pokémon mit dem Typ Feuer und existiert seit der ersten\\n        Spielgeneration. Es ist neben Bisasam und Schiggy eines der\\n        Starter-Pokémon in Pokémon Rot, Blau, Feuerrot und Blattgrün.\\n      </Text>\\n    </Stack>\\n  </Box>\\n  <Box border=\\\"1px solid #fa8005\\\" bg=\\\"orange10\\\" p=\\\"small\\\">\\n    <Stack space=\\\"medium\\\" align=\\\"center\\\">\\n      <Image\\n        src=\\\"https://www.pokewiki.de/images/7/7a/Sugimori_005.png\\\"\\n        alt=\\\"glutexo\\\"\\n        width={200}\\n        height={200}\\n      />\\n      <Headline level=\\\"4\\\">Glutexo</Headline>\\n      <Text>\\n        Glutexo ist ein Pokémon mit dem Typ Feuer und existiert seit der ersten\\n        Spielgeneration. Als erste Weiterentwicklung von Glumanda spielt es eine\\n        wichtige Rolle als Starter-Pokémon in Pokémon Rot, Blau, Feuerrot,\\n        Blattgrün.\\n      </Text>\\n    </Stack>\\n  </Box>\\n  <Box border=\\\"1px solid #fa8005\\\" bg=\\\"orange10\\\" p=\\\"small\\\">\\n    <Stack space=\\\"medium\\\" align=\\\"center\\\">\\n      <Image\\n        src=\\\"https://www.pokewiki.de/images/9/96/Sugimori_006.png\\\"\\n        alt=\\\"glurak\\\"\\n        width={250}\\n        height={200}\\n      />\\n      <Headline level=\\\"4\\\">Glurak</Headline>\\n      <Text>\\n        Glurak ist ein Pokémon mit den Typen Feuer und Flug und existiert seit\\n        der ersten Spielgeneration. Es stellt die zweite Entwicklungsstufe von\\n        Glumanda und Glutexo dar und ist somit neben Bisaflor und Turtok eine\\n        der Endentwicklungen der Starter-Pokémon aus Kanto.\\n      </Text>\\n    </Stack>\\n  </Box>\\n</Tiles>\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"title":"Tiles","group":"Layout"},"scope":{}},"navigation":[{"title":"Code Hightlight Test","slug":"highlight"},{"title":"Marigold","slug":"index"},{"name":"introduction","items":[{"title":"Getting Started","caption":"This page describes how to get started building an application with Marigold.","order":1,"slug":"introduction/getting-started"},{"title":"About","caption":"Learn about the goals of Marigold and how it aims to help building user interfaces.","order":2,"slug":"introduction/about"},{"title":"Concepts","caption":"This page discusses the concepts and ideas that Marigold is build upon.","order":3,"slug":"introduction/concepts"},{"title":"Theming","caption":"This page explains how themes workd and how to use them.","order":4,"slug":"introduction/theming"},{"title":"FAQ","caption":"This pages aims to help with the most common questions and inquiries.","order":0,"slug":"introduction/faq"}],"groups":[]},{"name":"foundation","items":[{"title":"Box Primitive","slug":"foundation/box-primitive"},{"title":"CSS-in-JS","slug":"foundation/css-in-js"},{"title":"Icons","slug":"foundation/icons"},{"title":"Theme & Variants","slug":"foundation/themes-variants"}],"groups":[]},{"name":"components","items":[],"groups":[{"name":"Layout","items":[{"title":"Aside","group":"Layout","slug":"components/aside"},{"title":"Aspect","group":"Layout","slug":"components/aspect"},{"title":"Box","group":"Layout","slug":"components/box"},{"title":"Breakout","group":"Layout","slug":"components/breakout"},{"title":"Center","group":"Layout","slug":"components/center"},{"title":"Columns","group":"Layout","slug":"components/columns"},{"title":"Container","group":"Layout","slug":"components/container"},{"title":"Content","caption":"<short purpose of component> (optional)","group":"Layout","slug":"components/content"},{"title":"Divider","group":"Layout","slug":"components/divider"},{"title":"Inline","group":"Layout","slug":"components/inline"},{"title":"Split","group":"Layout","slug":"components/split"},{"title":"Stack","group":"Layout","slug":"components/stack"},{"title":"Tiles","group":"Layout","slug":"components/tiles"}]},{"name":"Forms","items":[{"title":"Button","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=11%3A269","switch":true,"slug":"components/button"},{"title":"Checkbox","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=467%3A159","group":"Forms","switch":true,"slug":"components/checkbox"},{"title":"Input","group":"Forms","switch":true,"slug":"components/input"},{"title":"Label","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=92%3A0","switch":true,"slug":"components/label"},{"title":"NumberField","group":"Forms","switch":true,"slug":"components/number-field"},{"title":"Radio","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=467%3A332","switch":true,"slug":"components/radio"},{"title":"Select","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2596%3A2348","switch":true,"slug":"components/select"},{"title":"Slider","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=845%3A1254","switch":true,"slug":"components/slider"},{"title":"Switch","group":"Forms","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2458%3A2254","slug":"components/switch"},{"title":"TextArea","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=454%3A1","group":"Forms","switch":true,"slug":"components/text-area"},{"title":"TextField","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=340%3A0","group":"Forms","switch":true,"slug":"components/text-field"}]},{"name":"Collections","items":[{"title":"Table","group":"Collections","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=2387%3A1928","switch":true,"slug":"components/table"}]},{"name":"Overlay","items":[{"title":"Dialog","group":"Overlay","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=845%3A1095","switch":true,"slug":"components/dialog"},{"title":"Menu","group":"Overlay","slug":"components/menu"},{"title":"Tooltip","group":"Overlay","slug":"components/tooltip"}]},{"name":"Content","items":[{"title":"Badge","group":"Content","switch":true,"slug":"components/badge"},{"title":"Card","group":"Content","switch":true,"slug":"components/card"},{"title":"Footer","group":"Content","slug":"components/footer"},{"title":"Header","group":"Content","slug":"components/header"},{"title":"Headline","caption":"<short purpose of component> (optional)","group":"Content","switch":true,"slug":"components/headline"},{"title":"Icon","group":"Content","slug":"components/icon"},{"title":"Image","group":"Content","slug":"components/image"},{"title":"Link","group":"Content","switch":true,"slug":"components/link"},{"title":"List","group":"Content","switch":true,"slug":"components/list"},{"title":"Message","group":"Content","figma":"https://www.figma.com/file/DFKyTGHAoDxOsUBPszLLxP/%F0%9F%8F%B5%EF%B8%8FMarigold?node-id=582%3A119","switch":true,"slug":"components/message"},{"title":"Text","group":"Content","switch":true,"slug":"components/text"},{"title":"VisuallyHidden","group":"Content","slug":"components/visually-hidden"}]},{"name":"Application","items":[{"title":"Provider","group":"Application","slug":"components/provider"}]}]},{"name":"develop","items":[{"title":"Release","slug":"develop/release"},{"title":"Scripts","slug":"develop/scripts"}],"groups":[]}]},"__N_SSG":true}